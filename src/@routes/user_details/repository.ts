import mongoose, { Model } from "mongoose";
import { UserDetails, Users } from "../../@types";

export default class UserDetailsRepository {
  constructor(private userDetailsModel: Model<UserDetails>) {}

  /**
   * Create a new user details entry in the database
   * @param data UserDetails data to create
   * @returns The created user details
   * Were omitting createdAt and updatedAt because they will be auto generated by mongoose
   */

  async getAllUserDetails() {
    return await this.userDetailsModel
      .find()
      .populate<{ user: Users }>("user")
      .exec();
  }

  async getDetailsByUserId(id: string) {
    return await this.userDetailsModel
      .findOne({ user: id })
      .populate<{ user: Users }>("user")
      .exec();
  }

  async create(
    data: Omit<UserDetails, "createdAt" | "updatedAt">,
    options?: { session?: mongoose.ClientSession }
  ) {
    return await this.userDetailsModel.create([data], options);
  }

  updateById(user_id: string, data: Partial<UserDetails>) {
    return this.userDetailsModel.findOneAndUpdate(
      {
        user: user_id,
      },
      {
        ...data,
        updatedAt: new Date(),
      },
      { new: true }
    );
  }
}
